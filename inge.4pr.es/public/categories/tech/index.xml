<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>tech - Category - INGE4PRES RATIONAL THOUGHTS</title>
        <link>https://inge.4pr.es/categories/tech/</link>
        <description>tech - Category - INGE4PRES RATIONAL THOUGHTS</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 25 Oct 2021 15:42:08 &#43;0200</lastBuildDate><atom:link href="https://inge.4pr.es/categories/tech/" rel="self" type="application/rss+xml" /><item>
    <title>gRPC Traffic Mirroring With Ingress-Nginx on K8s</title>
    <link>https://inge.4pr.es/post/grpc-traffic-mirroring-with-ingress-nginx-on-k8s/</link>
    <pubDate>Mon, 25 Oct 2021 15:42:08 &#43;0200</pubDate>
    <author>inge4pres</author>
    <guid>https://inge.4pr.es/post/grpc-traffic-mirroring-with-ingress-nginx-on-k8s/</guid>
    <description><![CDATA[In a previous post we saw an NGINX configuration to allow gRPC traffic mirroring.
Is the same technique applicable on Kubernetes? Yes! Using the ingress-nginx ingress controller!
Traffic mirroringUse the following configurations snippets in the ingress-nginx configMap and in the Ingress manifest to mirror all traffic to a separate gRPC server.
ConfigMapReplace grpc-backend.company.net and grpc-mirror.company.net with the original and mirror endpoint, respectively.
1 2 3 4 5 6 7 8 9 10 11 12  http-snippet:|server { listen 127.]]></description>
</item><item>
    <title>gRPC Traffic Mirroring Using NGINX</title>
    <link>https://inge.4pr.es/post/grpc-traffic-mirroring-using-nginx/</link>
    <pubDate>Sun, 30 May 2021 17:23:35 &#43;0200</pubDate>
    <author>inge4pres</author>
    <guid>https://inge.4pr.es/post/grpc-traffic-mirroring-using-nginx/</guid>
    <description><![CDATA[Recently at work with the Optimyze team we faced the necessity of copying traffic from our current customer-facing environment to a new environment. We have assumptions and ideas about architectural changes that cannot be validated only with synthetic tests and require cloning traffic to a separate, internal testing environment.
There is no better test than the one performed with real-world data: when you hear speaking about testing in production, a deployment of a new feature to &ldquo;see what happens&rdquo; is not what I have in mind.]]></description>
</item><item>
    <title>Micro-committing with Git</title>
    <link>https://inge.4pr.es/post/micro-committing-with-git/</link>
    <pubDate>Sat, 03 Apr 2021 17:10:26 &#43;0100</pubDate>
    <author>inge4pres</author>
    <guid>https://inge.4pr.es/post/micro-committing-with-git/</guid>
    <description><![CDATA[I have been using micro-committing for some time now, during which I have adapted the usage of this technique to my needs, bringing it to a level that makes me more productive than ever in software development.
Combining micro-committing with Git, while doing TDD is now my favorite development experience: I like how this workflow helps to deliver changes with speed and confidence.
This is not a one-size-fits-all approach, I&rsquo;m sharing what works great for me; I hope some parts of what follows will help you and your team as well.]]></description>
</item><item>
    <title>CKA exam experience and preparation</title>
    <link>https://inge.4pr.es/post/cka-exam-experience/</link>
    <pubDate>Fri, 01 Nov 2019 15:56:42 &#43;0100</pubDate>
    <author>inge4pres</author>
    <guid>https://inge.4pr.es/post/cka-exam-experience/</guid>
    <description><![CDATA[Yes! Yesterday I received an awesome email stating that I cleared the Certified Kubernetes Administrator exam! ðŸ˜Ž Here I want to report my experience in preparing and taking the exam, hopefully this info can help others Kubernetes practitioners get the certification too.
PreparationI consider myself lucky because for the past two years I had the chance to use Kubernetes working at lastminute.com; on top this on-the-job training I went through a lot of studying and practicing because the exam itself has a lot of content.]]></description>
</item><item>
    <title>Progressive Delivery with Kubernetes</title>
    <link>https://inge.4pr.es/post/progressive-delivery-with-kubernetes/</link>
    <pubDate>Sun, 05 May 2019 15:00:51 &#43;0200</pubDate>
    <author>inge4pres</author>
    <guid>https://inge.4pr.es/post/progressive-delivery-with-kubernetes/</guid>
    <description><![CDATA[I&rsquo;m more and more fond of finding the perfect solution to manage application delivery: dev teams want to be fast but their ops counterpart is not happy to loose control over the growing number of deployments that could cause an outage. We as an industry need to find the right balance to have features delivered in time and keep the service up and running for our users! And that&rsquo;s where progressive delivery can help!]]></description>
</item><item>
    <title>GoLab 2018: Wrap Up</title>
    <link>https://inge.4pr.es/post/golab-2018-wrap-up/</link>
    <pubDate>Tue, 23 Oct 2018 18:07:07 &#43;0200</pubDate>
    <author>inge4pres</author>
    <guid>https://inge.4pr.es/post/golab-2018-wrap-up/</guid>
    <description><![CDATA[I&rsquo;m in the train back from GoLab 2018 and I am so happy that I attended this conference! It&rsquo;s been definitely one of most beautiful con I have attended in Italy, with tremendous speakers from all over the globe like Filippo Valsorda, Eleanor McHugh, Ron Evans and Bill Kennedy among many others; I have to say the organizers were just perfect in everything from the venue setup to the workshop organization, as if the quality of the talks ware not enough.]]></description>
</item><item>
    <title>Cloud-native applications: Operator-Framework</title>
    <link>https://inge.4pr.es/post/cloud-native-software-delivery/</link>
    <pubDate>Sat, 05 May 2018 15:08:30 &#43;0200</pubDate>
    <author>inge4pres</author>
    <guid>https://inge.4pr.es/post/cloud-native-software-delivery/</guid>
    <description><![CDATA[Cloud-native: sounds attractive right? What does it even mean? Wikipedia has no page on it already so anyone can give its own definition&hellip; Here&rsquo;s mine:
A Cloud-native application has only concern on the functionalities that it has to deliver as it is completely decoupled from the infrastructure it runs on
So how can software delivery be cloud-native? Isn&rsquo;t software delivery supposed to &ldquo;install&rdquo; software onto some infrastructure? Well if your infrastructure provider is cloud-native, you can transitively deliver software on it in a cloud-native way (counts of cloud-native is over 9000, so stopping here)!]]></description>
</item><item>
    <title>Continuous Delivery with Drone</title>
    <link>https://inge.4pr.es/post/continuous-delivery-with-drone/</link>
    <pubDate>Sun, 25 Feb 2018 16:47:05 &#43;0100</pubDate>
    <author>inge4pres</author>
    <guid>https://inge.4pr.es/post/continuous-delivery-with-drone/</guid>
    <description><![CDATA[Continuous Delivery should be a solved issue: the practice is well-defined and there is a plethora of tools implementing it with more or less peculiarities, but still many struggle implementing it. The dream of a perfect continuous deployment flow from the developer to the production environment with software quality gates based on automated tests is still alive in me, I tried and tried several times with multiple implementations on multiple platforms and never got to the point where I could say: &ldquo;I&rsquo;m done, this works exactly as I wanted&rdquo;.]]></description>
</item><item>
    <title>Golang Concurrency Patterns</title>
    <link>https://inge.4pr.es/post/2017-10-28-golang-concurrency-pattern/</link>
    <pubDate>Sat, 28 Oct 2017 19:40:09 &#43;0200</pubDate>
    <author>inge4pres</author>
    <guid>https://inge.4pr.es/post/2017-10-28-golang-concurrency-pattern/</guid>
    <description><![CDATA[In the early days of Go the language was often tailored towards &ldquo;system programming&rdquo; due to its C-stlye syntax and ability to write high-performance applications. Few time after, Go adoption was starting to gain traction for distributed systems development and projects like etcd, docker and kubernetes revealed the power of the networking capabilities offered by the internals in the language. Along the way a lot of libraries have been built around the powerful primitives offered by Go but in my opinion there is not enough use literature around the Communicating Sequential Processes implementation available through channels and goroutines, they are not even widely used in the standard library.]]></description>
</item><item>
    <title>Getting Started With Google Cloud Builder</title>
    <link>https://inge.4pr.es/post/2017-10-01-getting-started-with-google-cloud-builder/</link>
    <pubDate>Sun, 01 Oct 2017 21:31:52 &#43;0200</pubDate>
    <author>inge4pres</author>
    <guid>https://inge.4pr.es/post/2017-10-01-getting-started-with-google-cloud-builder/</guid>
    <description><![CDATA[One of the advantages of containerized applications is the standardization, some would say &ldquo;write it once, runs everywhere&rdquo; but that&rsquo;s another motto for another product. Anyway with a new packaging technology the same problems are faced: build reproducibility, or the necessity for people doing Ops to know they are going to deploy the same exact piece of code the Dev team used in their tests. So to address this issue the container image needs to be immutable: once it&rsquo;s built, it&rsquo;s not going to be changed, ever.]]></description>
</item></channel>
</rss>
