<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>infrastructure on INGE4PRES RATIONAL THOUGHTS</title>
    <link>https://inge.4pr.es/tags/infrastructure/</link>
    <description>Recent content in infrastructure on INGE4PRES RATIONAL THOUGHTS</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>fgualazzi@gmail.com (Francesco Gualazzi)</managingEditor>
    <webMaster>fgualazzi@gmail.com (Francesco Gualazzi)</webMaster>
    <lastBuildDate>Sat, 06 Nov 2021 15:42:08 +0200</lastBuildDate><atom:link href="https://inge.4pr.es/tags/infrastructure/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>gRPC Traffic Mirroring With Ingress-Nginx on K8s</title>
      <link>https://inge.4pr.es/grpc-traffic-mirroring-with-ingress-nginx-on-k8s/</link>
      <pubDate>Sat, 06 Nov 2021 15:42:08 +0200</pubDate>
      <author>fgualazzi@gmail.com (Francesco Gualazzi)</author>
      <guid>https://inge.4pr.es/grpc-traffic-mirroring-with-ingress-nginx-on-k8s/</guid>
      <description>gRPC NGINX
gRPC
k8s
In a previous post we saw an NGINX configuration to allow gRPC traffic mirroring.
Is the same technique applicable on Kubernetes? Yes! Using the ingress-nginx ingress controller!
Traffic mirroring Use the following configurations snippets in the ingress-nginx configMap and in the Ingress manifest to mirror all traffic to a separate gRPC server.
ConfigMap Replace grpc-backend.company.net and grpc-mirror.company.net with the original and mirror endpoint, respectively.
http-snippet: | server { listen 127.</description>
    </item>
    
    <item>
      <title>gRPC Traffic Mirroring Using NGINX</title>
      <link>https://inge.4pr.es/grpc-traffic-mirroring-using-nginx/</link>
      <pubDate>Sun, 30 May 2021 17:23:35 +0200</pubDate>
      <author>fgualazzi@gmail.com (Francesco Gualazzi)</author>
      <guid>https://inge.4pr.es/grpc-traffic-mirroring-using-nginx/</guid>
      <description>gRPC NGINX
gRPC
Recently at work with the Optimyze team we faced the necessity of copying traffic from our current customer-facing environment to a new environment. We have assumptions and ideas about architectural changes that cannot be validated only with synthetic tests and require cloning traffic to a separate, internal testing environment.
There is no better test than the one performed with real-world data: when you hear speaking about testing in production, a deployment of a new feature to &amp;ldquo;see what happens&amp;rdquo; is not what I have in mind.</description>
    </item>
    
    <item>
      <title>Zabbix: a powerful yet simple monitoring software</title>
      <link>https://inge.4pr.es/2013-10-07-zabbix-a-powerful-yet-simple-monitoring-software/</link>
      <pubDate>Mon, 07 Oct 2013 15:50:25 +0000</pubDate>
      <author>fgualazzi@gmail.com (Francesco Gualazzi)</author>
      <guid>https://inge.4pr.es/2013-10-07-zabbix-a-powerful-yet-simple-monitoring-software/</guid>
      <description>It may come in mind to any IT system engineer to know what is the status of the network, server by server, instance by instance; it happened to me when I was given the responsibility to manage my company’s infrastructure and I was wondering which tool could have helped to do the job.
I chose Zabbix to monitor my infrastructure because:
despite it’s a bit difficult to install (you need a PHP enabled web server, a database and a C compiler), you will benefit a very user-friendly web interface with lots of functionalities native agents for major OS release are already complied: FreeBSD, Linux, Windows, etc… Compiling to other OS just requires a “configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install” it offers many monitoring methods via a unique interface: you can group SNMP, JMX, HTTP monitoring in one shot it has multi-step HTTP/HTTPS monitoring, simulating different browsers and clients you can build nice infographics bundling all kind of monitored datas you can manage users and roles to give access to the web interface at your company’s employees you can build custom monitoring scripts to your needs Well let’s see some action now: I would like to post a short tutorial on how to build a custom script to monitor resources used by a Glassfish application server.</description>
    </item>
    
  </channel>
</rss>
